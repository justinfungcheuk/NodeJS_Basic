命令行窗口 Command Line Window，CMD窗口，終端，Shell
Windows版本 - 開始菜單 --》運行 --》CMD --》回車

- 常用的指令：
dir 列出當前目錄下的所有文件
cd 目錄名 進入到指定的目錄
md 目錄名 創建一個文件夾
rd 目錄名 刪除一個文件夾 

- 進入不同的磁碟盤 - 磁碟盤名 + 冒號
C:
D:
E:

- 目錄
. 表示當前目錄 例如： ./style.css
.. 表示上一級目錄 例如： ../style.css


- 環境變量 （就是 window系統中的變量 / mac系統的變量）
path環境變量
- path環境變量中保存的是一個一個的路徑，路徑之間使用;隔開
- 作用:
- 當我們在命令行窗口打開一個文件，或調用一個程序時，
  系統會首先在當前目錄下尋找文件程序，如果找到了則直接打開
  如果沒有找到則會依次到環境變量path 的路徑中尋找
  如果沒有找到則報錯
- 可以將一些常用的文件或程序的路徑添加到 path下，這樣我們就可以在任意位置來訪問這些文件了
例如： C:\Users\justinfungcheuk\Desktop\hello

- 所以我們可以將一些經常需要訪問的程序和文件的路徑添加到 path中，
這樣我們就可以在任意位置來訪問這些文件和程序了


- 尋找變量的過程和作用域鏈是一樣的
例如： 
var a = 100;
function fn(){
    function fn2(){
        console.log(a);
    }
    fn2();
}
fn()

2. 進程和線程
進程：
- 進程負責為程序的運行提供必備的環境
- 進程就相當於工廠中的車間

線程：
- 線程是計算機中的最小的計算單位，線程負責執行進程中的程序
- 線程就相當於工廠中的工人

I/ O (Input / Output)
- I / O 操作指的是對磁盤的讀寫操作

Node
- Node 是對 ES標準 的一個實現，Node也是一個 JS引擎
- 通過 Node 可以使 JS 代碼在服務器端執行
- Node 僅僅對 ES標準 進行了實現，所以在 Node 中不包含 DOM 和 BOM
- Node 中可以使用所有的內建對象
  String Number Boolean Math Date RegExp Function Object Array
  而 BOM 和 DOM 都不能使用
  但是可以使用 console 也可以使用定時器（setTimeout() setInterval()）

- Node 可以在後台來編寫服務器
  Node 編寫服務器都是單線程的服務器
  進程
- 進程就是一個一個的工作計劃（工廠中的車間）
  線程：
- 線程是計算機中的最小的計算單位，線程負責執行進程中的程序
- 線程就相當於工廠中的工人

- 傳統的服務器都是多線程的
- 每進來一個請求，就創建一個線程去處理請求

- Node的服務器單線程的
- Node處理請求時是單線程，但是在後台擁有一個 I/O線程池
