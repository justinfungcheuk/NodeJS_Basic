const express = require("express");


NPM 是一個 package manager，具備兩個重要的功能
第一個是：模塊倉庫 （Registry / Repository）
第二個是：CLI 命令行介面 - Command Line Interface - CLI介面

NodeJS模塊主要來源於內置模塊Built-in Modules （內置核心模塊 例如：http / fs 可以直接在代碼裡被導入和調用）
和 
儲存在 NPM Registru 的第三方模塊 3rd Party Modules

當內置核心模塊沒有找到核心的功能，可以到 第三方模塊 或 NPM Registry 搜索

模塊化源代碼能為我們帶來什麼好處呢？
例如：某個網購平台出現bug的情況下，可以把網購平台模塊化，把大問題變成個別的小問題，模塊可以按功能切分，
就像把 登錄功能 轉換成 登錄模塊，付款功能 轉換成 付款模塊，讓每個模塊都獨立運行，
模塊功能最後會通過接口對外開放，讓程序統一調用。
統一調用模塊比從零開始編寫一個功能快更多，程序不會出現重疊的源代碼，降低程序出錯的風險。

還可以隨時升級 或 替換某個模塊的源代碼。
所以只要對外開放的接口不變，模塊內部的代碼可以隨意更改。且不影響全局。

當功能被模塊化後，如果某個功能出錯，例如是登錄功能出錯，程序員可以去對應的登錄模塊 debug，而不用在所有的源代碼做維護。
所以模塊化可以減低程序的後期維護成本


NodeJS07：本課重點是 - 怎麼編寫 NodeJS模塊 和 在編寫完後要怎麼引入這個 NodeJS模塊